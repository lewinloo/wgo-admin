// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"gin_template/internal/app/api/handler"
	"gin_template/internal/app/domain/repository"
	"gin_template/internal/app/domain/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func BuildHandlerInjector() (*HandlerInjector, func(), error) {
	helloHandler := &handler.HelloHandler{}
	userRepository := &repository.UserRepository{}
	roleRepository := &repository.RoleRepository{}
	userService := &service.UserService{
		UserRepo: userRepository,
		RoleRepo: roleRepository,
	}
	userHandler := &handler.UserHandler{
		UserSvc: userService,
	}
	handlerInjector := &HandlerInjector{
		HelloHandler: helloHandler,
		UserHandler:  userHandler,
	}
	return handlerInjector, func() {
	}, nil
}

// wire.go:

var HandlerInjectorSet = wire.NewSet(wire.Struct(new(HandlerInjector), "*"))

type HandlerInjector struct {
	HelloHandler *handler.HelloHandler
	UserHandler  *handler.UserHandler
}
