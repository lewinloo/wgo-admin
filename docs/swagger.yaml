basePath: /api/v1
definitions:
  common.Result:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.CreateMenuParams:
    properties:
      breadcrumb:
        type: boolean
      componentFilePath:
        type: string
      enable:
        type: boolean
      hidden:
        type: boolean
      icon:
        type: string
      keepAlive:
        type: boolean
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      redirect:
        type: string
      sort:
        type: integer
      title:
        type: string
    required:
    - componentFilePath
    - name
    - path
    - title
    type: object
  dto.CreateRoleParams:
    properties:
      desc:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: boolean
    required:
    - desc
    - id
    - name
    - status
    type: object
  dto.Ids:
    properties:
      ids:
        description: id 切片
        items:
          type: integer
        type: array
    type: object
  dto.LoginParams:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.QueryRoleListParams:
    properties:
      current:
        description: 当前页
        type: integer
      size:
        description: 页的大小
        type: integer
    type: object
  dto.QueryUserListParams:
    properties:
      current:
        description: 当前页
        type: integer
      email:
        description: 邮箱
        type: string
      size:
        description: 页的大小
        type: integer
      status:
        description: '1：正常 2: 禁用'
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  dto.RegisterParams:
    properties:
      email:
        type: string
      mobile:
        type: string
      password:
        maxLength: 32
        minLength: 6
        type: string
      roleIds:
        items:
          type: string
        type: array
      username:
        maxLength: 16
        minLength: 4
        type: string
    required:
    - email
    - mobile
    - password
    - roleIds
    - username
    type: object
host: 127.0.0.1:3000
info:
  contact: {}
  description: This is a sample Server pets
  title: Gin Project API
  version: 0.0.1
paths:
  /hello:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      summary: 健康检查
      tags:
      - test
  /menu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建菜单参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.CreateMenuParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 创建菜单接口
      tags:
      - 菜单模块
  /menu/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - 菜单模块
  /menu/tree:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 查询菜单树
      tags:
      - 菜单模块
  /role:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建角色参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 创建角色接口
      tags:
      - 角色模块
  /role/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 角色id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 删除角色
      tags:
      - 角色模块
  /role/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: 查询列表参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.QueryRoleListParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 角色列表接口
      tags:
      - 角色模块
  /user/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除用户参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.Ids'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - 用户模块
  /user/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: 登录参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.QueryUserListParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 用户列表
      tags:
      - 用户模块
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 登录参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.LoginParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      summary: 用户登录接口
      tags:
      - 用户模块
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 注册参数
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterParams'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回体
          schema:
            $ref: '#/definitions/common.Result'
      security:
      - Bearer: []
      summary: 用户注册接口
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
